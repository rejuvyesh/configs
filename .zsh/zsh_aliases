#-*- mode: sh; -*-

# aliases

# normal aliases
alias cgrep="grep --color=always"
[[ -e $(which colordiff) ]] && alias diff="colordiff"
alias grep="grep --color=auto -P"
alias less="less -iF"
alias ls="ls --color=always --group-directories-first -v"
alias mkdir="mkdir -p" 
alias untar='tar -xvvf'
alias mmv='noglob zmv -W'
alias mc="mc -x"
alias watch="watch -c"

# some ls aliases
alias ll="ls -l"
alias la="ls -A"
alias l="ls -CF"

alias -g L="| less"
alias -g ...='../..'
alias -g ....='../../..'
alias -g G='| grep'

# power of zsh realized :D
alias -s pdf=zathura
alias -s mkv=mpv
alias -s avi=mpv

alias reload!='. ~/.zshrc'

function li() { libreoffice $* >/dev/null 2>/dev/null &! }
function ff() { firefox $* >/dev/null 2>/dev/null &! }
function ffp() { firefox -private-window $* >/dev/null 2>/dev/null &! }
function za() { zathura $* >/dev/null 2>/dev/null &! }
function ok() { okular $* >/dev/null 2>/dev/null &! }
function no() { nomacs $* >/dev/null 2>/dev/null &! }
function en() { emacs $* >/dev/null 2>/dev/null &! }

function mat() {
    wmname LG3D; matlab -nosplash >/dev/null 2>/dev/null &!
}

################################################################################# arch-linux aliases 

# Look for yaourt, and add some useful functions if we have it.
if [[ -x `which yaourt` ]]; then
    upgrade () {
      sudo etckeeper pre-install
      yaourt -Syua --devel
      sudo etckeeper post-install
    }
    # Additional yaourt alias examples
    if [[ -x `which abs` ]]; then
        alias yaupd='yaourt -Sy && sudo abs' # Update and refresh the local package and ABS databases against repositories
    else
        alias yaupd='yaourt -Sy' # Update and refresh the local package and ABS databases against repositories
    fi
    alias yainsd='yaourt -S --asdeps' # Install given package(s) as dependencies of another package
    alias yamir='yaourt -Syy' # Force refresh of all package lists after updating /etc/pacman.d/mirrorlist
elif [[ -x `which pacman` ]]; then
    upgrade() {
      sudo pacman -Syu
    }
elif [[ -x `which aptitude` ]]; then
    upgrade() {
      sudo aptitude update
      sudo aptitude safe-upgrade
    }
elif [[ -x `which apt-get` ]]; then
    upgrade() {
      sudo apt-get update
      sudo apt-get dist-upgrade
    }
else
    echo "Not sure where we are."
fi

# nix
alias nix-env="noglob nix-env"
alias ne="nix-env"
function nix-update() {
  nix-channel --update
  nix-env -u '*' --always --dry-run
  echo "update? [RET/^C]"; read
  nix-env -u '*' --always --keep-going
}
alias nup="nix-update"

# https://bbs.archlinux.org/viewtopic.php?id=93683
paclist() {
  sudo pacman -Qei $(pacman -Qu|cut -d" " -f 1)|awk ' BEGIN {FS=":"}/^Name/{printf("\033[1;36m%s\033[1;37m", $2)}/^Description/{print $2}'
}

alias "sudo"="sudo " # allow sudo with aliases

# youtube download
function y() {
  local y_path="$HOME/youtube"
  if [[ $1 != "" ]]; then
    y_path="$1"
  fi
  echo "Paste links, ^D start to download."
  youtube-dl -o "${y_path}/%(title)s-%(id)s.%(ext)s" -a-
}

function ya() {
  echo "Paste link, ^D start downloading with aria2"
  youtube-dl-aria -a-
}

# move target to location and create symbolic link
function mvln() {
      mv $1 $2/ && ln -s $2/$1 $1
}

# tor-browser
alias tor="tor-browser-en"

################################################################################
alias cp="cp -iv"
alias mv="mv -iv"

################################################################################
# System related
alias enablebluetooth="systemctl start bluetooth.service"
alias sc="systemctl"
alias usc="systemctl --user"
#################################################################################
# git related
if hash "hub" 2> /dev/null; then
    function git(){ hub "$@" }
fi
alias g="git"
alias gst="git status"
alias gpom="git push origin master"
################################################################################
# git-annex
alias ga="git-annex"
alias gas="git-annex sync"
alias gass="git-annex-syncer"
alias gai="git-annex info"
alias gast="git-annex status"
alias gaw="git-annex whereis"
alias gac="git commit -m 'update'"
alias gaa="git-annex add"
alias get="git-annex get"
alias drop="git-annex drop"
alias gadu="git-annex unused"
alias gadun="git-annex dropunused"

# annex tasks
alias gacop="git-annex copy --to=portable-hd --not --in portable-hd"
alias gamop="git-annex move --to=portable-hd"

function ga-new-direct() {
  echo "Label?" && read $label
  git init
  git-annex init "$label"
  echo "defaulting to direct mode, semitrust, 2 copies (see .gitattributes) and 100m reserve..."
  git-annex direct
  git config add annex.diskreserve "100m"
  echo "* annex.numcopies=2" > .gitattributes
  git add .gitattributes
  git commit -m "init repo"
}

# repo update
alias mrr="mr register"
alias mup="mr -j5 update"

# unison
alias uk="unison -fat kindle"

# emacs
alias e="emacs -nw"
alias ee="emacs-gui"
alias se="sudo emacs -nw"

alias http='python3 -m http.server'

# tmux
alias tmuxl='tmux list-sessions'
alias tmuxa='tmux attach-session'

# ssh

# c
alias co="./configure"
# Isolate installs
function cop() {
  dest=$1; shift
  ./configure --prefix=$HOME/local/$dest $*
}

if hash "colormake" 2> /dev/null; then
    alias make="colormake"
fi


# udevil
alias ua='devmon --unmount-all --no-gui'
alias um='udevil mount'
alias uu='udevil umount'

# shortcuts
alias my="sudo chown $USER:$USER"
alias x="chmod +x"

# Wine
alias ewine="wine explorer /desktop=foo${RANDOM},1024x768"
alias newine="nice wine explorer /desktop=foo${RANDOM},1024x768"


# repo
alias mup="mr -j5 update"

# mpv
if hash "rmpv" 2> /dev/null; then
    alias mm="rmpv"
    alias ms="rmpv -c show"
    alias mb="rmpv -b -s 200x100"
else
    alias mm="mpv"
fi

# ruby
alias i="pry"

# python
alias p2="python2"
alias p3="python3"
alias p="python3"

# go
[[ -e $(which colorgo) ]] && [[ -e $(which go) ]] && alias go=colorgo

# subs
subs() { subliminal --languages=en -f -s $* }

# rsync
_rsync_cmd='rsync --verbose --progress --human-readable --archive --hard-links --one-file-system'
alias rsync-copy="${_rsync_cmd}"
alias rsync-move="${_rsync_cmd} --remove-source-files"
alias rsync-update="${_rsync_cmd} --update"
alias rsync-synchronize="${_rsync_cmd} --update --delete"
unset _rsync_cmd

# Resource Usage
alias df='df -kh'
alias du='du -kh'

# file tagging
alias rr="tag_filename -t read"
alias ur="tag_filename -t !read"
alias ut="tag_filename -t !"
alias fic="tag_filename -t fiction"

# watch
alias watch="watch -c"
alias w="watch.rb"
function wi() {
    watch.rb --changes . $*
}

# trash instead of rm
alias te=trash-empty
alias tp=trash-put
alias tl=trash-list

# scan cleaner
alias scl='scancleaner'

# hledger
alias h='hledger'
alias ha='hledger add'
alias hb='hledger balance'

# apt
alias agi='sudo aptitude install'
alias agui='sudo aptitude remove'
